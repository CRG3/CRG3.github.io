"use strict";angular.module("ngApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","ui.bootstrap","ui-leaflet","datatables"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl",controllerAs:"about"}).when("/details/:projectID",{templateUrl:"views/details.html",controller:"DetailsCtrl",controllerAs:"details"}).otherwise({redirectTo:"/"})}]);var app=angular.module("ngApp");app.controller("MainCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),app.controller("MapCtrl",function(){this.center={lat:38.276456,lng:-121.392615,zoom:12},this.defaults={scrollWheelZoom:!1},this.events=null}),app.controller("SiteCtrl",["$http","$scope","$filter","leafletData",function(a,b,c,d){function e(a,c){a=a.feature,b.SelectedFID=a.properties.FID;var d={radius:8,fillColor:"#FFFF98",color:"#FFFF7F",weight:5,opacity:1,fillOpacity:.7};c.target.setStyle(d)}function f(a,c){a=a.feature,b.SelectedFID=null,console.log(c);var d={radius:8,fillColor:"#3232FF",color:"#0000FF",weight:1,opacity:1,fillOpacity:.8};c.target.setStyle(d)}function g(a,c){console.log(a),c.target.bindPopup(b.popupMessage(a.feature.properties.id,a.feature.properties.name)),c.target.openPopup()}var h={radius:8,fillColor:"#3232FF",color:"#0000FF",weight:1,opacity:1,fillOpacity:.8};a.get("geo.geojson").success(function(a){angular.extend(b,{geojson:{data:a,pointToLayer:function(a,b){return L.circleMarker(b,h)}},ProjectGeo:{data:a,pointToLayer:function(a,b){return L.circleMarker(b,h)}}}),b.centerJSON();var c=b.geojson.data.features;b.projects=[];for(var d,e=0;d=c[e++];)b.projects.push({name:d.properties.name,id:d.properties.id,FID:d.properties.FID,variable:d.properties.variable,details:d.properties.details})}),this.clearSelections=function(){b.search.query="",b.search.variable="",b.search.year="",b.SelectedFID=null,b.selectedRow=null},b.setClickedRow=function(a){b.selectedRow=a,b.search.SelectedFeature=b.selectedRow.FID},b.$on("leafletDirectiveGeoJson.map.mouseover",function(a,b){e(b.leafletObject,b.leafletEvent)}),b.$on("leafletDirectiveGeoJson.map.mouseout",function(a,b){f(b.leafletObject,b.leafletEvent)}),b.popupMessage=function(a,b){var c='<a href="#/details/'+a+'">'+b+"</a>";return c},b.$on("leafletDirectiveGeoJson.map.click",function(a,b){console.log("click"),g(b.leafletObject,b.leafletEvent)}),b.search={query:"",variable:"",year:""},b.$watchCollection("search",function(a,d){if(console.log("Search Values ",a),a!==d){for(var e=angular.copy(b.projects),f=c("filter")(e,b.search.query),g=c("customSearch")(f,b.search.variable,b.search.year),h=[],i=0;i<g.length;i++)h.push(g[i].id);var j=angular.copy(b.ProjectGeo),k=c("filter")(j.data.features,function(a){for(var b=a.properties.id,c=null,d=0;d<h.length;d++){if(b===h[d])return c=!0;if(c===!0)return a}});j.features=k,b.geojson.data=j,b.centerJSON()}}),b.centerJSON=function(){d.getMap("map").then(function(a){for(var c=[],d=0;d<b.geojson.data.features.length;d++){var e=b.geojson.data.features[d];if("Point"===e.geometry.type){var f=e.geometry.coordinates;c.push(L.GeoJSON.coordsToLatLng(f))}else if("MultiPoint"===e.geometry.type)for(var g=0;g<e.geometry.coordinates.length;g++){var h=e.geometry.coordinates[g];c.push(L.GeoJSON.coordsToLatLng(h))}else if("Polygon"===e.geometry.type){var i=e.geometry.coordinates[0];for(var j in i){var k=i[j];c.push(L.GeoJSON.coordsToLatLng(k))}}else console.log("Unknown feature geometry type. Try using points, multipoints, or polygons")}a.fitBounds(c)})}}]),app.filter("unique",["$parse",function(a){return function(b,c){if(c===!1)return b;if((c||angular.isUndefined(c))&&angular.isArray(b)){var d=[],e=angular.isString(c)?a(c):function(a){return a},f=function(a){return angular.isObject(a)?e(a):a};angular.forEach(b,function(a){for(var b=!1,c=0;c<d.length;c++)if(angular.equals(f(d[c]),f(a))){b=!0;break}b||d.push(a)}),b=d}return b}}]),app.filter("customSearch",[function(){return function(a,b,c){var d=[];if(b&&c)for(var e=0;e<a.length;e++)-1!==a[e].variable.indexOf(b)&&-1!==a[e].year.indexOf(c)&&d.push(a[e]);else if(b)for(var f=0;f<a.length;f++)-1!==a[f].variable.indexOf(b)&&d.push(a[f]);else if(c)for(var g=0;g<a.length;g++)-1!==a[g].year.indexOf(c)&&d.push(a[g]);else d=a;return d}}]),angular.module("ngApp").controller("AboutCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]});var app=angular.module("ngApp");app.controller("DetailsCtrl",["$http","$routeParams","$scope","leafletData","DTOptionsBuilder","DTColumnBuilder","$q","$sce","$filter",function(a,b,c,d,e,f,g,h,i){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"],a.get("projects/"+b.projectID+".json").then(function(a){return a.data}).then(function(a){c.project=a,a.tabs.table===!0&&(c.url=a.table.url,c.columns=a.table.columns,k()),a.tabs.customMap===!0&&(c.iframeUrl=h.trustAsResourceUrl(a.iframe))}),a.get("geo.geojson").success(function(a){for(var d=null,e=0;e<a.features.length;e++)a.features[e].properties.id===b.projectID&&(d=e);angular.extend(c,{geojson:{data:{type:"FeatureCollection",features:[a.features[d]]},pointToLayer:function(a,b){return L.circleMarker(b,j)}}})});var j={radius:5,fillColor:"#3232FF",color:"#0000FF",weight:1,opacity:1,fillOpacity:.8};this.activetab="metadata",c.centerJSON=function(){d.getMap("MyMap").then(function(a){var b=[];console.log(c.geojson.data.features.length);for(var d=0;d<c.geojson.data.features.length;d++){var e=c.geojson.data.features[d];if("Point"===e.geometry.type){var f=e.geometry.coordinates;b.push(L.GeoJSON.coordsToLatLng(f))}else if("MultiPoint"===e.geometry.type)for(var g=0;g<e.geometry.coordinates.length;g++){var h=e.geometry.coordinates[g];b.push(L.GeoJSON.coordsToLatLng(h))}else if("Polygon"===e.geometry.type){var i=e.geometry.coordinates[0];for(var j in i){var k=i[j];b.push(L.GeoJSON.coordsToLatLng(k))}}else console.log("Unknown feature geometry type. Try using points, multipoints, or polygons")}a.fitBounds(b)})};var k=function(){var b=function(a){for(var b=[],c=0;c<a.length;c++)b.push(f.newColumn(a[c]).withTitle(a[c]));return b};c.dtOptions=e.fromFnPromise(function(){var b=g.defer();return a.get(String(c.url)).then(function(a){b.resolve(a.data)}),b.promise}).withPaginationType("full_numbers"),c.dtColumns=b(c.columns)}}]),angular.module("ngApp").run(["$templateCache",function(a){a.put("views/about.html","<p>Data explorer for Consumnes Research Group III</p>"),a.put("views/details.html",'<div ng-controller="DetailsCtrl as details"> <h3>{{project.name}}</h3> <ul class="nav nav-tabs"> <li ng-class="{active:details.activetab === \'metadata\'}"><a ng-click="details.activetab = &quot;metadata&quot;">Metadata</a></li> <li ng-class="{active:details.activetab === \'location\'}" ng-hide="project.tabs.map === false"><a ng-click="details.activetab = &quot;location&quot;">Map</a></li> <li ng-class="{active:details.activetab === \'data\'}" ng-hide="project.tabs.table === false"><a ng-click="details.activetab = &quot;data&quot;">Data</a></li> <li ng-class="{active:details.activetab === \'download\'}" ng-hide="project.tabs.download === false"><a ng-click="details.activetab = &quot;download&quot;">Download</a></li> <li ng-class="{active:details.activetab === \'customMap\'}" ng-hide="project.tabs.customMap === false"><a ng-click="details.activetab = &quot;customMap&quot;">Custom Map</a></li> </ul> <div class="tab-content" style="padding:10px"> <div ng-switch="details.activetab"> <div ng-switch-when="metadata"> <p><b>About:</b> {{project.details}}</p> <p><b>Contact:</b> {{project.contact}}</p> <p><b>Dates:</b> {{project.dates}}</p> <p><b>Variables:</b> <li ng-repeat="variable in project.variables"> {{variable}} </li> </p> </div> <div ng-switch-when="data"> {{table}} <div> <table datatable="" dt-options="dtOptions" dt-columns="dtColumns" class="row-border hover"></table> </div> </div> <div ng-switch-when="location"> <div style="height:300px"> <leaflet id="MyMap" geojson="geojson" height="100%" ng-init="centerJSON()"></leaflet> <input type="button" value="Click to Center" ng-click="centerJSON()"> </div> </div> <div ng-switch-when="download"> <ul> <li ng-repeat="download in project.downloads"> <span class="glyphicon glyphicon-download-alt" aria-hidden="true"></span> <a download href="{{download.url}}"> {{download.name}} </a> </li> </ul> </div> <div ng-switch-when="customMap"> <div style="height: 400px"> <iframe ng-src="{{iframeUrl}}" scrolling="no" frameborder="0" style="position: relative; height: 100%; width: 100%"></iframe> </div> </div> </div> </div> </div>'),a.put("views/main.html",'<div ng-controller="SiteCtrl as ctrl"> <div class="row"> <div class="col-sm-3" id="sidebar"> <div class="userInput"> <input ng-model="search.query" placeholder="Search"> </div> <div class="userInput"> <p>Filter by project type</p> <select class="selectpicker" ng-model="search.variable" ng-options=" feature.variable as feature.variable for feature in projects | unique:\'variable\' | orderBy:\'variable\'" fix> <option value="" selected>All types</option> </select> </div> <!--<li>\n            <p>Filter by year</p>\n            <select class="selectpicker" ng-model=\'search.year\' ng-options=" feature.year as feature.year for feature in projects | unique:\'year\' | orderBy:\'year\'" fix>\n              <option value="" selected="selected">All years</option>\n            </select>\n        </li>--> <div class="userInput"> <button type="button" class="btn btn-grey" ng-click="ctrl.clearSelections()"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Clear Selections</button> </div> </div> <div class="col-sm-9" id="mainCol"> <div style="padding: 20px"></div> <div> <div ng-repeat="project in projects | orderBy:orderByField:reverse | customSearch:search.variable:search.year | filter:search.query" ng-class="{\'selected\':project.FID == SelectedFID}" ng-click="setClickedRow(project)"> <div class="project"> <h3>{{project.name}}</h3> {{project.variable}}<br> {{project.details}}<br> {{project.year}}<br> <a href="#/details/{{project.id}}"><button type="button" class="btn btn-default btn-lg"> <span class="glyphicon glyphicon-info-sign" aria-hidden="true"></span> details </button></a> </div> <div style="padding: 10px"></div> </div> </div> </div> </div></div>')}]);